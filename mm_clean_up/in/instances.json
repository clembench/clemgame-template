{
  "experiments": [
    {
      "name": "normal_2_en",
      "game_instances": [
        {
          "game_id": 0,
          "max_rounds": 10,
          "max_penalties": 6,
          "lenient": true,
          "p1_initial_prompt": "Attached is an image consisting of two parts:\n\n- On the right is a legend showing several icons, each with an associated ID above it.\n\n- On the left is a background image overlaid with these icons placed at random coordinates. An x–y coordinate system is shown along the left and bottom edges of the image. Note that the y-axis values increase downward.\n\nYou are playing a collaborative game with another player based on your image. The other player sees a variation of the image, where the IDs are shuffled and the icons are overlaid on the background at different coordinates. The goal of the game is for both players to move the icons on their own images so that identical icons end up at the same coordinates. You have to communicate with the other player to agree upon a common goal state.\n\n\n**Rules**\n\n* In each turn, you can send exactly one command. Valid commands are:\n    * `say(<MESSAGE>)`: to send a message to the other player: \n    * `move(<ID>, <X>, <Y>)`: to move the icon with id `<ID>` to the coordinates `(<X>,<y>)`. You will **not** receive visual feedback. The other player can't see your move commands.\n    * You must not use coordinates when communicating with the other player.\n* Strictly follow the format without adding anything else. No thinking process, no extra formatting, no backticks.\n\n\n**Communication Guidelines**\n\nFirst of all, agree on which icon to move. You cannot instruct the other player to focus on an icon with just its ID, because the icons have different IDs for each player. Instead, describe the icon and agree on it.\n\n\n* Wrong example:\n    \n    ```\n    say(Let's move icon D!)\n    ```\n\n    ID 'D' could reference different icons for you and the other player!\n\n* Correct example:\n    Suppose `<ICON_DESCRIPTION>` matches one of your icons. THen you could send a message like this:\n    \n    ```\n    say(Let's move the icon <ICON_DESCRIPTION>!)\n    ```\n\n    If the other player agrees, move on to choose and agree on a target location\n\nFollowing that, you can agree on the target location. You must not instruct the other player using coordinates. Instead, describe the target location using the background image as reference, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with the coordinates of the target location.\n\n* Wrong example\n\n    ```\n    say(Let's move the <ICON_DESCRIPTION> icon to location (800, 100)!)\n    ```\n\n    If you use coordinates or numbers in your message, you both get penalized.\n\n* Correct example\n\n    Suppose you describe the target location with `<TARGET_LOCATION_DESCRIPTION>` using objects in the background image as reference. Then you could send a message like this:\n    \n    ```\n    say(Let's move the <ICON_DESCRIPTION> icon to <TARGET_LOCATION_DESCRIPTION>!)\n    ```\n\n    If the other player agrees, and if the icon that suits `<ICON_DESCRIPTION>` has ID `<ID>` for you, and if the location at `<TARGET_LOCATION_DESCRIPTION>` is at coordinates `(<X>, <Y>)` then you move the object using the command `move(<ID>, <X>, <Y>)`\n\n\n**End of Game** \n\nIf you think you reached the goal of aligning all icons, you can ask the other player to finish the game by sending `say(finished?)`. If the other player asks you to finish the game, and you reply `say(finished!)`, the game will end.\n\nBoth players win if the game ends within 10 rounds, where one round is defined as two players each sending a valid command.\n\nYou will immediately lose the game if you:\n\n- send any analysis, reasoning, or any other formatting apart from `say(<MESSAGE>)` or `move(<ID>, <X>, <Y>)`.\n- use coordinates in any of your `say(<MESSAGE>)` messages\n\nPlease send a message to the other player to start the game!",
          "p2_initial_prompt": "Attached is an image consisting of two parts:\n\n- On the right is a legend showing several icons, each with an associated ID above it.\n\n- On the left is a background image overlaid with these icons placed at random coordinates. An x–y coordinate system is shown along the left and bottom edges of the image. Note that the y-axis values increase downward.\n\nYou are playing a collaborative game with another player based on your image. The other player sees a variation of the image, where the IDs are shuffled and the icons are overlaid on the background at different coordinates. The goal of the game is for both players to move the icons on their own images so that identical icons end up at the same coordinates. You have to communicate with the other player to agree upon a common goal state.\n\n\n**Rules**\n\n* In each turn, you can send exactly one command. Valid commands are:\n    * `say(<MESSAGE>)`: to send a message to the other player: \n    * `move(<ID>, <X>, <Y>)`: to move the icon with id `<ID>` to the coordinates `(<X>,<y>)`. You will **not** receive visual feedback. The other player can't see your move commands.\n    * You must not use coordinates when communicating with the other player.\n* Strictly follow the format without adding anything else. No thinking process, no extra formatting, no backticks.\n\n\n**Communication Guidelines**\n\nFirst of all, agree on which icon to move. You cannot instruct the other player to focus on an icon with just its ID, because the icons have different IDs for each player. Instead, describe the icon and agree on it.\n\n\n* Wrong example:\n    \n    ```\n    say(Let's move icon D!)\n    ```\n\n    ID 'D' could reference different icons for you and the other player!\n\n* Correct example:\n    Suppose `<ICON_DESCRIPTION>` matches one of your icons. THen you could send a message like this:\n    \n    ```\n    say(Let's move the icon <ICON_DESCRIPTION>!)\n    ```\n\n    If the other player agrees, move on to choose and agree on a target location\n\nFollowing that, you can agree on the target location. You must not instruct the other player using coordinates. Instead, describe the target location using the background image as reference, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with the coordinates of the target location.\n\n* Wrong example\n\n    ```\n    say(Let's move the <ICON_DESCRIPTION> icon to location (800, 100)!)\n    ```\n\n    If you use coordinates or numbers in your message, you both get penalized.\n\n* Correct example\n\n    Suppose you describe the target location with `<TARGET_LOCATION_DESCRIPTION>` using objects in the background image as reference. Then you could send a message like this:\n    \n    ```\n    say(Let's move the <ICON_DESCRIPTION> icon to <TARGET_LOCATION_DESCRIPTION>!)\n    ```\n\n    If the other player agrees, and if the icon that suits `<ICON_DESCRIPTION>` has ID `<ID>` for you, and if the location at `<TARGET_LOCATION_DESCRIPTION>` is at coordinates `(<X>, <Y>)` then you move the object using the command `move(<ID>, <X>, <Y>)`\n\n\n**End of Game** \n\nIf you think you reached the goal of aligning all icons, you can ask the other player to finish the game by sending `say(finished?)`. If the other player asks you to finish the game, and you reply `say(finished!)`, the game will end.\n\nBoth players win if the game ends within 10 rounds, where one round is defined as two players each sending a valid command.\n\nYou will immediately lose the game if you:\n\n- send any analysis, reasoning, or any other formatting apart from `say(<MESSAGE>)` or `move(<ID>, <X>, <Y>)`.\n- use coordinates in any of your `say(<MESSAGE>)` messages\n\nThe other player started the game by sending this message:\n\n\"$start_message\"\n\nWhat is your first command?",
          "new_turn": "\nThe other player sent this message:\n\n\"$turn_message\"\n\nWhat is your next command?",
          "new_turn_move": "The other player moved an icon on their image.\n\n\nWhat is your next command?",
          "invalid_response": "Penalty: $reason \n\nMake sure that \n\n* messages to the other player do not contain any numbers or coordinates!\n* your response only contains either `say(<MESSAGE>)` or `move(<ID>, <X>, <Y>)`, and nothing else! Do not use any formatting, comments, or reasoning!\n",
          "penalty_message": "You have collectively accumulated $penalty of $max_penalties penalties. Please try again!\n",
          "penalty_counter": "You have collectively accumulated $penalty of $max_penalties penalties.\n",
          "message_relay": "Your message has been relayed to the other player.\n\n",
          "move_pattern": "(?P<head>.*)move\\((?P<obj>[A-Z]), *(?P<x>\\d+), *(?P<y>\\d+)\\)(?P<tail>.*)",
          "message_pattern": "(?P<head>.*)say\\((?P<message>[^)]+)\\)(?P<tail>.*)",
          "terminate_question": "finished?",
          "terminate_answer": "finished!",
          "restricted": [
            "[0-9]+"
          ],
          "parse_errors": {
            "head_tail": "Your message must not contain anything before or after the command!",
            "several_commands": "Your message contains more than one command!",
            "restriction": "Your message contains restricted content!",
            "invalid_format": "Your message is not in the expected format!",
            "invalid_start": "You must begin the game by sending a message to the other player!"
          },
          "move_messages": {
            "successful": "Moved object '$object' to ($x,$y) successfully.\n\n",
            "out_of_bounds": "Invalid move: ($x,$y) is out of bounds. Please try again!\n\n",
            "obj_not_found": "Invalid move: Your image has no object with ID '$object'. Please try again!\n\n"
          },
          "background": "resources/backgrounds/kitchen.png",
          "state1": [
            {
              "id": "A",
              "coord": [
                500,
                200
              ],
              "name": "Online shopping",
              "url": "https://cdn-icons-png.freepik.com/128/10471/10471248.png",
              "freepik_id": 10471248
            },
            {
              "id": "B",
              "coord": [
                700,
                200
              ],
              "name": "Mobile app",
              "url": "https://cdn-icons-png.freepik.com/128/5521/5521112.png",
              "freepik_id": 5521112
            }
          ],
          "state2": [
            {
              "id": "A",
              "coord": [
                400,
                200
              ],
              "name": "Mobile app",
              "url": "https://cdn-icons-png.freepik.com/128/5521/5521112.png",
              "freepik_id": 5521112
            },
            {
              "id": "B",
              "coord": [
                500,
                200
              ],
              "name": "Online shopping",
              "url": "https://cdn-icons-png.freepik.com/128/10471/10471248.png",
              "freepik_id": 10471248
            }
          ]
        }
      ]
    }
  ]
}