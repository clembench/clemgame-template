{
  "experiments": [
    {
      "name": "normal_2_en",
      "game_instances": [
        {
          "game_id": 0,
          "max_rounds": 8,
          "max_penalties": 4,
          "lenient": true,
          "p1_initial_prompt": "Attached is an image of two parts:\n\n- On the right is a legend image of several icons, each icon has an associated ID above it.\n\n- On the left is a background image overlaid with these icons at random coordinates. A x-y coordinate system is on the left and bottom edge of the picture. Note the value on y-axis increases downward.\n\nYou are going to play a collaboration game with another player based on your image. The other player sees a variation of the image, where the icons are overlaid on the background image at different coordinates. The goal of this game is two players moving icons on their own image, such that the identical icons end up at same coordinates.\n\n**Communication Format**\nCommunicate with each other using one of the two command formats, one command per turn:\n\n1. `say(<MESSAGE>)` — to send a message to the other player. \n\n2. `move(<ID>, <X>, <Y>)` — to move an icon with ID <ID> to a specified location at `(<X>, <Y>)`, according to the coordinate system in the picture on the left. You will **not** receive visual feedback. Your move commands are not visible to the other player.\n\nStrictly follow the format without adding anything else. No thinking process, no extra formatting, no backticks.\n\n**Communication Guidelines**\n\n1. Agree on which icon to move. You cannot instruct the other player to focus on an icon with just its ID, because the same ID might be associated with different icons for each player. Instead, describe the icon, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with its associated ID.\n\n```\n# Wrong example\n# icon D could be different icons for you and the other player\nsay(Let's move icon D!)\n\n# Correct example\n# suppose you describe an icon with <ICON_DESCRIPTION>\nsay(Let's move the icon <ICON_DESCRIPTION>!)\n\n# If the other player agrees, move on to choose and agree on a target location\n```\n\n2. Agree on the target location. You cannot instruct the other player with coordinates. Instead, describe the target location using the background image as reference, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with the coordinates of the target location.\n\n```\n# Wrong example\nsay(Let's move the <ICON_DESCRIPTION> icon to location (800, 100)!)\n\n# Correct example\n# suppose you describe the target location with <TARGET_LOCATION_DESCRIPTION> using objects in the background image as reference\nsay(Let's move the <ICON_DESCRIPTION> icon to <TARGET_LOCATION_DESCRIPTION>!)\n\n# If the other player agrees, \n# and if the icon that suits <ICON_DESCRIPTION> has ID <ID> for you\n# and if the location at <TARGET_LOCATION_DESCRIPTION> is at coordinates (<X>, <Y>)\n# then you send the `move` command \nmove(<ID>, <X>, <Y>)\n```\n\n**End of the Game**\nThe finishing command has 2 format: \n- Use `say(finished?)` to indicate you suspect all the identical icon pairs are at the same coordinates.  \n- If the other player agrees, they reply with `say(finished!)`, and the game will end.   \nBefore initiating or replying to the finishing command, make sure all icons' coordinates are aligned. \n\nBoth players win if the game ends within 8 rounds, where one round is defined as two players each sending a valid command.\n\nYou will immediately loss the game if you:\n\n- Send any analysis, reasoning, or any other formatting apart from `say(<MESSAGE>)` or `move(<ID>, <X>, <Y>)`.\n- Instruct the other player to move an icon using coordinates of target location.\n\nPlease send a message to the other player to start the game!",
          "p2_initial_prompt": "Attached is an image of two parts:\n\n- On the right is a legend image of several icons, each icon has an associated ID above it.\n\n- On the left is a background image overlaid with these icons at random coordinates. A x-y coordinate system is on the left and bottom edge of the picture. Note the value on y-axis increases downward.\n\nYou are going to play a collaboration game with another player based on your image. The other player sees a variation of the image, where the icons are overlaid on the background image at different coordinates. The goal of this game is two players moving icons on their own image, such that the identical icons end up at same coordinates.\n\n**Communication Format**\nCommunicate with each other using one of the two command formats, one command per turn:\n\n1. `say(<MESSAGE>)` — to send a message to the other player. \n\n2. `move(<ID>, <X>, <Y>)` — to move an icon with ID <ID> to a specified location at `(<X>, <Y>)`, according to the coordinate system in the picture on the left. You will **not** receive visual feedback. Your move commands are not visible to the other player.\n\nStrictly follow the format without adding anything else. No thinking process, no extra formatting, no backticks.\n\n**Communication Guidelines**\n\n1. Agree on which icon to move. You cannot instruct the other player to focus on an icon with just its ID, because the same ID might be associated with different icons for each player. Instead, describe the icon, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with its associated ID.\n\n```\n# Wrong example\n# icon D could be different icons for you and the other player\nsay(Let's move icon D!)\n\n# Correct example\n# suppose you describe an icon with <ICON_DESCRIPTION>\nsay(Let's move the icon <ICON_DESCRIPTION>!)\n\n# If the other player agrees, move on to choose and agree on a target location\n```\n\n2. Agree on the target location. You cannot instruct the other player with coordinates. Instead, describe the target location using the background image as reference, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with the coordinates of the target location.\n\n```\n# Wrong example\nsay(Let's move the <ICON_DESCRIPTION> icon to location (800, 100)!)\n\n# Correct example\n# suppose you describe the target location with <TARGET_LOCATION_DESCRIPTION> using objects in the background image as reference\nsay(Let's move the <ICON_DESCRIPTION> icon to <TARGET_LOCATION_DESCRIPTION>!)\n\n# If the other player agrees, \n# and if the icon that suits <ICON_DESCRIPTION> has ID <ID> for you\n# and if the location at <TARGET_LOCATION_DESCRIPTION> is at coordinates (<X>, <Y>)\n# then you send the `move` command \nmove(<ID>, <X>, <Y>)\n```\n\n**End of the Game**\nThe finishing command has 2 format: \n- Use `say(finished?)` to indicate you suspect all the identical icon pairs are at the same coordinates.  \n- If the other player agrees, they reply with `say(finished!)`, and the game will end.   \nBefore initiating or replying to the finishing command, make sure all icons' coordinates are aligned. \n\nBoth players win if the game ends within 8 rounds, where one round is defined as two players each sending a valid command.\n\nYou will immediately loss the game if you:\n\n- Send any analysis, reasoning, or any other formatting apart from `say(<MESSAGE>)` or `move(<ID>, <X>, <Y>)`.\n- Instruct the other player to move an icon using coordinates of target location.\n\nThe other player started the game by sending this message:\n\n\"$start_message\"\n\nWhat is your first command?",
          "new_turn": "\nThe other player sent this message:\n\n\"$turn_message\"\n\nWhat is your next command?",
          "new_turn_move": "The other player moved an object on their grid.\n\n\nWhat is your next command?",
          "invalid_response": "Penalty: $reason \n\nMake sure that \n\n* messages to the other player do not contain the words 'row' or 'column', or any numbers or coordinates!\n* your response only contains either `say(MESSAGE)` or `move(ID, X, Y)`, and nothing else! Do not use any formatting, comments, or reasoning!",
          "penalty_message": "You have collectively accumulated $penalty of $max_penalties penalties. Please try again!\n",
          "penalty_counter": "You have collectively accumulated $penalty of $max_penalties penalties.\n",
          "message_relay": "Your message has been relayed to the other player.\n\n",
          "move_pattern": "(?P<head>.*)move\\((?P<obj>[A-Z]), *(?P<x>\\d+), *(?P<y>\\d+)\\)(?P<tail>.*)",
          "message_pattern": "(?P<head>.*)say\\((?P<message>[^)]+)\\)(?P<tail>.*)",
          "terminate_question": "finished?",
          "terminate_answer": "finished!",
          "restricted": ["[0-9]+"],
          "parse_errors": {
            "head_tail": "Your message must not contain anything before or after the command!",
            "several_commands": "Your message contains more than one command!",
            "restriction": "Your message contains restricted content!",
            "invalid_format": "Your message is not in the expected format!",
            "invalid_start": "You must begin the game by sending a message to the other player!"
          },
          "move_messages": {
            "successful": "Moved object '$object' to ($x,$y) successfully. Your updated image is attached.\n\n",
            "out_of_bounds": "Invalid move: ($x,$y) is out of bounds. Please try again!\n\n",
            "obj_not_found": "Invalid move: Your image has now object with ID '$object'. Please try again!\n\n"
          },
          "background": "resources/backgrounds/kitchen.png",
          "state1": [
            {
              "id": "A",
              "coord": [500, 200],
              "name": "Online shopping",
              "url": "https://cdn-icons-png.freepik.com/128/10471/10471248.png",
              "freepik_id": 10471248
            },
            {
              "id": "B",
              "coord": [700, 200],
              "name": "Mobile app",
              "url": "https://cdn-icons-png.freepik.com/128/5521/5521112.png",
              "freepik_id": 5521112
            }
          ],
          "state2": [
            {
              "id": "A",
              "coord": [400, 200],
              "name": "Mobile app",
              "url": "https://cdn-icons-png.freepik.com/128/5521/5521112.png",
              "freepik_id": 5521112
            },
            {
              "id": "B",
              "coord": [500, 200],
              "name": "Online shopping",
              "url": "https://cdn-icons-png.freepik.com/128/10471/10471248.png",
              "freepik_id": 10471248
            }
          ]
        }
      ]
    },
    {
      "name": "similar_2_en",
      "game_instances": [
        {
          "game_id": 0,
          "max_rounds": 8,
          "max_penalties": 4,
          "lenient": true,
          "p1_initial_prompt": "Attached is an image of two parts:\n\n- On the right is a legend image of several icons, each icon has an associated ID above it.\n\n- On the left is a background image overlaid with these icons at random coordinates. A x-y coordinate system is on the left and bottom edge of the picture. Note the value on y-axis increases downward.\n\nYou are going to play a collaboration game with another player based on your image. The other player sees a variation of the image, where the icons are overlaid on the background image at different coordinates. The goal of this game is two players moving icons on their own image, such that the identical icons end up at same coordinates.\n\n**Communication Format**\nCommunicate with each other using one of the two command formats, one command per turn:\n\n1. `say(<MESSAGE>)` — to send a message to the other player. \n\n2. `move(<ID>, <X>, <Y>)` — to move an icon with ID <ID> to a specified location at `(<X>, <Y>)`, according to the coordinate system in the picture on the left. You will **not** receive visual feedback. Your move commands are not visible to the other player.\n\nStrictly follow the format without adding anything else. No thinking process, no extra formatting, no backticks.\n\n**Communication Guidelines**\n\n1. Agree on which icon to move. You cannot instruct the other player to focus on an icon with just its ID, because the same ID might be associated with different icons for each player. Instead, describe the icon, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with its associated ID.\n\n```\n# Wrong example\n# icon D could be different icons for you and the other player\nsay(Let's move icon D!)\n\n# Correct example\n# suppose you describe an icon with <ICON_DESCRIPTION>\nsay(Let's move the icon <ICON_DESCRIPTION>!)\n\n# If the other player agrees, move on to choose and agree on a target location\n```\n\n2. Agree on the target location. You cannot instruct the other player with coordinates. Instead, describe the target location using the background image as reference, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with the coordinates of the target location.\n\n```\n# Wrong example\nsay(Let's move the <ICON_DESCRIPTION> icon to location (800, 100)!)\n\n# Correct example\n# suppose you describe the target location with <TARGET_LOCATION_DESCRIPTION> using objects in the background image as reference\nsay(Let's move the <ICON_DESCRIPTION> icon to <TARGET_LOCATION_DESCRIPTION>!)\n\n# If the other player agrees, \n# and if the icon that suits <ICON_DESCRIPTION> has ID <ID> for you\n# and if the location at <TARGET_LOCATION_DESCRIPTION> is at coordinates (<X>, <Y>)\n# then you send the `move` command \nmove(<ID>, <X>, <Y>)\n```\n\n**End of the Game**\nThe finishing command has 2 format: \n- Use `say(finished?)` to indicate you suspect all the identical icon pairs are at the same coordinates.  \n- If the other player agrees, they reply with `say(finished!)`, and the game will end.   \nBefore initiating or replying to the finishing command, make sure all icons' coordinates are aligned. \n\nBoth players win if the game ends within 8 rounds, where one round is defined as two players each sending a valid command.\n\nYou will immediately loss the game if you:\n\n- Send any analysis, reasoning, or any other formatting apart from `say(<MESSAGE>)` or `move(<ID>, <X>, <Y>)`.\n- Instruct the other player to move an icon using coordinates of target location.\n\nPlease send a message to the other player to start the game!",
          "p2_initial_prompt": "Attached is an image of two parts:\n\n- On the right is a legend image of several icons, each icon has an associated ID above it.\n\n- On the left is a background image overlaid with these icons at random coordinates. A x-y coordinate system is on the left and bottom edge of the picture. Note the value on y-axis increases downward.\n\nYou are going to play a collaboration game with another player based on your image. The other player sees a variation of the image, where the icons are overlaid on the background image at different coordinates. The goal of this game is two players moving icons on their own image, such that the identical icons end up at same coordinates.\n\n**Communication Format**\nCommunicate with each other using one of the two command formats, one command per turn:\n\n1. `say(<MESSAGE>)` — to send a message to the other player. \n\n2. `move(<ID>, <X>, <Y>)` — to move an icon with ID <ID> to a specified location at `(<X>, <Y>)`, according to the coordinate system in the picture on the left. You will **not** receive visual feedback. Your move commands are not visible to the other player.\n\nStrictly follow the format without adding anything else. No thinking process, no extra formatting, no backticks.\n\n**Communication Guidelines**\n\n1. Agree on which icon to move. You cannot instruct the other player to focus on an icon with just its ID, because the same ID might be associated with different icons for each player. Instead, describe the icon, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with its associated ID.\n\n```\n# Wrong example\n# icon D could be different icons for you and the other player\nsay(Let's move icon D!)\n\n# Correct example\n# suppose you describe an icon with <ICON_DESCRIPTION>\nsay(Let's move the icon <ICON_DESCRIPTION>!)\n\n# If the other player agrees, move on to choose and agree on a target location\n```\n\n2. Agree on the target location. You cannot instruct the other player with coordinates. Instead, describe the target location using the background image as reference, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with the coordinates of the target location.\n\n```\n# Wrong example\nsay(Let's move the <ICON_DESCRIPTION> icon to location (800, 100)!)\n\n# Correct example\n# suppose you describe the target location with <TARGET_LOCATION_DESCRIPTION> using objects in the background image as reference\nsay(Let's move the <ICON_DESCRIPTION> icon to <TARGET_LOCATION_DESCRIPTION>!)\n\n# If the other player agrees, \n# and if the icon that suits <ICON_DESCRIPTION> has ID <ID> for you\n# and if the location at <TARGET_LOCATION_DESCRIPTION> is at coordinates (<X>, <Y>)\n# then you send the `move` command \nmove(<ID>, <X>, <Y>)\n```\n\n**End of the Game**\nThe finishing command has 2 format: \n- Use `say(finished?)` to indicate you suspect all the identical icon pairs are at the same coordinates.  \n- If the other player agrees, they reply with `say(finished!)`, and the game will end.   \nBefore initiating or replying to the finishing command, make sure all icons' coordinates are aligned. \n\nBoth players win if the game ends within 8 rounds, where one round is defined as two players each sending a valid command.\n\nYou will immediately loss the game if you:\n\n- Send any analysis, reasoning, or any other formatting apart from `say(<MESSAGE>)` or `move(<ID>, <X>, <Y>)`.\n- Instruct the other player to move an icon using coordinates of target location.\n\nThe other player started the game by sending this message:\n\n\"$start_message\"\n\nWhat is your first command?",
          "new_turn": "\nThe other player sent this message:\n\n\"$turn_message\"\n\nWhat is your next command?",
          "new_turn_move": "The other player moved an object on their grid.\n\n\nWhat is your next command?",
          "invalid_response": "Penalty: $reason \n\nMake sure that \n\n* messages to the other player do not contain the words 'row' or 'column', or any numbers or coordinates!\n* your response only contains either `say(MESSAGE)` or `move(ID, X, Y)`, and nothing else! Do not use any formatting, comments, or reasoning!",
          "penalty_message": "You have collectively accumulated $penalty of $max_penalties penalties. Please try again!\n",
          "penalty_counter": "You have collectively accumulated $penalty of $max_penalties penalties.\n",
          "message_relay": "Your message has been relayed to the other player.\n\n",
          "move_pattern": "(?P<head>.*)move\\((?P<obj>[A-Z]), *(?P<x>\\d+), *(?P<y>\\d+)\\)(?P<tail>.*)",
          "message_pattern": "(?P<head>.*)say\\((?P<message>[^)]+)\\)(?P<tail>.*)",
          "terminate_question": "finished?",
          "terminate_answer": "finished!",
          "restricted": ["[0-9]+"],
          "parse_errors": {
            "head_tail": "Your message must not contain anything before or after the command!",
            "several_commands": "Your message contains more than one command!",
            "restriction": "Your message contains restricted content!",
            "invalid_format": "Your message is not in the expected format!",
            "invalid_start": "You must begin the game by sending a message to the other player!"
          },
          "move_messages": {
            "successful": "Moved object '$object' to ($x,$y) successfully. Your updated image is attached.\n\n",
            "out_of_bounds": "Invalid move: ($x,$y) is out of bounds. Please try again!\n\n",
            "obj_not_found": "Invalid move: Your image has now object with ID '$object'. Please try again!\n\n"
          },
          "background": "resources/backgrounds/kitchen.png",
          "state1": [
            {
              "id": "A",
              "coord": [500, 500],
              "name": "Flashlight",
              "url": "https://cdn-icons-png.freepik.com/128/10974/10974002.png",
              "freepik_id": 10974002
            },
            {
              "id": "B",
              "coord": [800, 100],
              "name": "Flashlight",
              "url": "https://cdn-icons-png.freepik.com/128/15364/15364056.png",
              "freepik_id": 15364056
            }
          ],
          "state2": [
            {
              "id": "A",
              "coord": [200, 500],
              "name": "Flashlight",
              "url": "https://cdn-icons-png.freepik.com/128/15364/15364056.png",
              "freepik_id": 15364056
            },
            {
              "id": "B",
              "coord": [900, 500],
              "name": "Flashlight",
              "url": "https://cdn-icons-png.freepik.com/128/10974/10974002.png",
              "freepik_id": 10974002
            }
          ]
        }
      ]
    },
    {
      "name": "abstract_2_en",
      "game_instances": [
        {
          "game_id": 0,
          "max_rounds": 8,
          "max_penalties": 4,
          "lenient": true,
          "p1_initial_prompt": "Attached is an image of two parts:\n\n- On the right is a legend image of several icons, each icon has an associated ID above it.\n\n- On the left is a background image overlaid with these icons at random coordinates. A x-y coordinate system is on the left and bottom edge of the picture. Note the value on y-axis increases downward.\n\nYou are going to play a collaboration game with another player based on your image. The other player sees a variation of the image, where the icons are overlaid on the background image at different coordinates. The goal of this game is two players moving icons on their own image, such that the identical icons end up at same coordinates.\n\n**Communication Format**\nCommunicate with each other using one of the two command formats, one command per turn:\n\n1. `say(<MESSAGE>)` — to send a message to the other player. \n\n2. `move(<ID>, <X>, <Y>)` — to move an icon with ID <ID> to a specified location at `(<X>, <Y>)`, according to the coordinate system in the picture on the left. You will **not** receive visual feedback. Your move commands are not visible to the other player.\n\nStrictly follow the format without adding anything else. No thinking process, no extra formatting, no backticks.\n\n**Communication Guidelines**\n\n1. Agree on which icon to move. You cannot instruct the other player to focus on an icon with just its ID, because the same ID might be associated with different icons for each player. Instead, describe the icon, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with its associated ID.\n\n```\n# Wrong example\n# icon D could be different icons for you and the other player\nsay(Let's move icon D!)\n\n# Correct example\n# suppose you describe an icon with <ICON_DESCRIPTION>\nsay(Let's move the icon <ICON_DESCRIPTION>!)\n\n# If the other player agrees, move on to choose and agree on a target location\n```\n\n2. Agree on the target location. You cannot instruct the other player with coordinates. Instead, describe the target location using the background image as reference, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with the coordinates of the target location.\n\n```\n# Wrong example\nsay(Let's move the <ICON_DESCRIPTION> icon to location (800, 100)!)\n\n# Correct example\n# suppose you describe the target location with <TARGET_LOCATION_DESCRIPTION> using objects in the background image as reference\nsay(Let's move the <ICON_DESCRIPTION> icon to <TARGET_LOCATION_DESCRIPTION>!)\n\n# If the other player agrees, \n# and if the icon that suits <ICON_DESCRIPTION> has ID <ID> for you\n# and if the location at <TARGET_LOCATION_DESCRIPTION> is at coordinates (<X>, <Y>)\n# then you send the `move` command \nmove(<ID>, <X>, <Y>)\n```\n\n**End of the Game**\nThe finishing command has 2 format: \n- Use `say(finished?)` to indicate you suspect all the identical icon pairs are at the same coordinates.  \n- If the other player agrees, they reply with `say(finished!)`, and the game will end.   \nBefore initiating or replying to the finishing command, make sure all icons' coordinates are aligned. \n\nBoth players win if the game ends within 8 rounds, where one round is defined as two players each sending a valid command.\n\nYou will immediately loss the game if you:\n\n- Send any analysis, reasoning, or any other formatting apart from `say(<MESSAGE>)` or `move(<ID>, <X>, <Y>)`.\n- Instruct the other player to move an icon using coordinates of target location.\n\nPlease send a message to the other player to start the game!",
          "p2_initial_prompt": "Attached is an image of two parts:\n\n- On the right is a legend image of several icons, each icon has an associated ID above it.\n\n- On the left is a background image overlaid with these icons at random coordinates. A x-y coordinate system is on the left and bottom edge of the picture. Note the value on y-axis increases downward.\n\nYou are going to play a collaboration game with another player based on your image. The other player sees a variation of the image, where the icons are overlaid on the background image at different coordinates. The goal of this game is two players moving icons on their own image, such that the identical icons end up at same coordinates.\n\n**Communication Format**\nCommunicate with each other using one of the two command formats, one command per turn:\n\n1. `say(<MESSAGE>)` — to send a message to the other player. \n\n2. `move(<ID>, <X>, <Y>)` — to move an icon with ID <ID> to a specified location at `(<X>, <Y>)`, according to the coordinate system in the picture on the left. You will **not** receive visual feedback. Your move commands are not visible to the other player.\n\nStrictly follow the format without adding anything else. No thinking process, no extra formatting, no backticks.\n\n**Communication Guidelines**\n\n1. Agree on which icon to move. You cannot instruct the other player to focus on an icon with just its ID, because the same ID might be associated with different icons for each player. Instead, describe the icon, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with its associated ID.\n\n```\n# Wrong example\n# icon D could be different icons for you and the other player\nsay(Let's move icon D!)\n\n# Correct example\n# suppose you describe an icon with <ICON_DESCRIPTION>\nsay(Let's move the icon <ICON_DESCRIPTION>!)\n\n# If the other player agrees, move on to choose and agree on a target location\n```\n\n2. Agree on the target location. You cannot instruct the other player with coordinates. Instead, describe the target location using the background image as reference, agree on it, then formulate the `move(<ID>, <X>, <Y>)` command with the coordinates of the target location.\n\n```\n# Wrong example\nsay(Let's move the <ICON_DESCRIPTION> icon to location (800, 100)!)\n\n# Correct example\n# suppose you describe the target location with <TARGET_LOCATION_DESCRIPTION> using objects in the background image as reference\nsay(Let's move the <ICON_DESCRIPTION> icon to <TARGET_LOCATION_DESCRIPTION>!)\n\n# If the other player agrees, \n# and if the icon that suits <ICON_DESCRIPTION> has ID <ID> for you\n# and if the location at <TARGET_LOCATION_DESCRIPTION> is at coordinates (<X>, <Y>)\n# then you send the `move` command \nmove(<ID>, <X>, <Y>)\n```\n\n**End of the Game**\nThe finishing command has 2 format: \n- Use `say(finished?)` to indicate you suspect all the identical icon pairs are at the same coordinates.  \n- If the other player agrees, they reply with `say(finished!)`, and the game will end.   \nBefore initiating or replying to the finishing command, make sure all icons' coordinates are aligned. \n\nBoth players win if the game ends within 8 rounds, where one round is defined as two players each sending a valid command.\n\nYou will immediately loss the game if you:\n\n- Send any analysis, reasoning, or any other formatting apart from `say(<MESSAGE>)` or `move(<ID>, <X>, <Y>)`.\n- Instruct the other player to move an icon using coordinates of target location.\n\nThe other player started the game by sending this message:\n\n\"$start_message\"\n\nWhat is your first command?",
          "new_turn": "\nThe other player sent this message:\n\n\"$turn_message\"\n\nWhat is your next command?",
          "new_turn_move": "The other player moved an object on their grid.\n\n\nWhat is your next command?",
          "invalid_response": "Penalty: $reason \n\nMake sure that \n\n* messages to the other player do not contain the words 'row' or 'column', or any numbers or coordinates!\n* your response only contains either `say(MESSAGE)` or `move(ID, X, Y)`, and nothing else! Do not use any formatting, comments, or reasoning!",
          "penalty_message": "You have collectively accumulated $penalty of $max_penalties penalties. Please try again!\n",
          "penalty_counter": "You have collectively accumulated $penalty of $max_penalties penalties.\n",
          "message_relay": "Your message has been relayed to the other player.\n\n",
          "move_pattern": "(?P<head>.*)move\\((?P<obj>[A-Z]), *(?P<x>\\d+), *(?P<y>\\d+)\\)(?P<tail>.*)",
          "message_pattern": "(?P<head>.*)say\\((?P<message>[^)]+)\\)(?P<tail>.*)",
          "terminate_question": "finished?",
          "terminate_answer": "finished!",
          "restricted": ["[0-9]+"],
          "parse_errors": {
            "head_tail": "Your message must not contain anything before or after the command!",
            "several_commands": "Your message contains more than one command!",
            "restriction": "Your message contains restricted content!",
            "invalid_format": "Your message is not in the expected format!",
            "invalid_start": "You must begin the game by sending a message to the other player!"
          },
          "move_messages": {
            "successful": "Moved object '$object' to ($x,$y) successfully. Your updated image is attached.\n\n",
            "out_of_bounds": "Invalid move: ($x,$y) is out of bounds. Please try again!\n\n",
            "obj_not_found": "Invalid move: Your image has now object with ID '$object'. Please try again!\n\n"
          },
          "background": "resources/backgrounds/kitchen.png",
          "state1": [
            {
              "id": "A",
              "coord": [200, 400],
              "name": "Beach ball",
              "url": "https://cdn-icons-png.freepik.com/128/3211/3211172.png",
              "freepik_id": 3211172
            },
            {
              "id": "B",
              "coord": [300, 100],
              "name": "Note",
              "url": "https://cdn-icons-png.freepik.com/128/6956/6956321.png",
              "freepik_id": 6956321
            }
          ],
          "state2": [
            {
              "id": "A",
              "coord": [900, 400],
              "name": "Note",
              "url": "https://cdn-icons-png.freepik.com/128/6956/6956321.png",
              "freepik_id": 6956321
            },
            {
              "id": "B",
              "coord": [100, 500],
              "name": "Beach ball",
              "url": "https://cdn-icons-png.freepik.com/128/3211/3211172.png",
              "freepik_id": 3211172
            }
          ]
        }
      ]
    },
    {
      "name": "normal_2_zh-CN",
      "game_instances": [
        {
          "game_id": 0,
          "max_rounds": 8,
          "max_penalties": 4,
          "lenient": true,
          "p1_initial_prompt": "附件中的图片由两部分组成：\n\n- 右侧是图例，展示了若干图标，每个图标上方标有一个对应的 ID。\n\n- 左侧是一张带有 X-Y 坐标系的背景图，图例中的图标被随机叠加在其上，坐标轴分别在图片的左侧和下方。请注意，Y 轴上数值是向下递增的。\n\n你将与另一位玩家基于这张图片进行一场协作游戏。另一位玩家看到的是该图片的一个变体，其中图标的位置与你的不同。游戏目标是：两位玩家分别移动自己图像中的图标，使得相同的图标最终出现在相同的坐标位置上。\n\n**沟通格式**\n请严格按照以下两种命令格式进行沟通，每回合仅发送一条指令：\n\n1. `发送(<消息>)` —— 用来向另一位玩家发送信息。\n\n2. `移动(<ID>, <X>, <Y>)` —— 用来将某个图标依据左侧图像中的坐标系统移动到指定的坐标位置 (<X>, <Y>)。你将**不会**收到更新后的图片作为视觉反馈。你的移动指令对另一位玩家不可见。\n\n不要添加任何额外内容，包括思考过程、额外格式或反引号等。\n\n**交流指引**\n1. 和另一位玩家就移动哪个图标达成一致。你不能仅仅通过 ID 指出要移动的图标，因为同一个 ID 可能在两位玩家的图片中对应不同的图标。正确做法是先描述图标的样子，双方确认后，再使用该图标的 ID 发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例：图标 D 可能对你和另一位玩家而言是不同的图标\nsay(我们来移动图标 D 吧!)\n\n# 正确示例：用描述的方式来锁定图标\nsay(我们来移动那个 <图标描述> 图标吧！)\n\n# 如果对方同意，再共同确认目标位置\n```\n\n2. 就目标位置达成共识。你**不能**直接通过坐标来告诉对方目标位置。正确做法是根据背景图描述目标位置，双方确认后，再使用具体坐标发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例\nsay(我们把 <图标描述> 图标移动到坐标 (800, 100) 吧！)\n\n# 正确示例：用背景图中的物体来描述目标位置\nsay(我们把 <图标描述> 图标移动到 <目标位置描述> 吧!)\n\n# 如果对方同意，\n# 且你的图中符合 <图标描述> 的图标 ID 为 <ID>\n# 且目标位置 <目标位置描述> 的坐标为 (<X>, <Y>)\n# 那你就可以发送移动指令\n移动(<ID>, <X>, <Y>)\n```\n\n**游戏结束**\n游戏结束命令有两种格式：\n- 使用 `发送(结束了?)` 表示你认为所有相同图标已经对齐；\n- 如果对方也同意，他们将回复 `发送(结束了!)`，游戏随之结束。\n在发送或回复结束命令前，请确保所有图标的位置已对齐。\n\n**胜负判定**\n如果游戏在 8 个回合内结束，则两位玩家均获胜。一个回合的定义为两位玩家各自发送一条有效命令。\n\n如果你出现以下情况，你将立即输掉游戏：\n\n- 发送任何分析、推理内容，或使用 `发送(<消息>)` 和 `移动(<ID>, <X>, <Y>)` 以外的格式；\n- 使用目标位置的坐标指示另一位玩家移动图标。\n请向另一位玩家发送一条消息以开始游戏！",
          "p2_initial_prompt": "附件中的图片由两部分组成：\n\n- 右侧是图例，展示了若干图标，每个图标上方标有一个对应的 ID。\n\n- 左侧是一张带有 X-Y 坐标系的背景图，图例中的图标被随机叠加在其上，坐标轴分别在图片的左侧和下方。请注意，Y 轴上数值是向下递增的。\n\n你将与另一位玩家基于这张图片进行一场协作游戏。另一位玩家看到的是该图片的一个变体，其中图标的位置与你的不同。游戏目标是：两位玩家分别移动自己图像中的图标，使得相同的图标最终出现在相同的坐标位置上。\n\n**沟通格式**\n请严格按照以下两种命令格式进行沟通，每回合仅发送一条指令：\n\n1. `发送(<消息>)` —— 用来向另一位玩家发送信息。\n\n2. `移动(<ID>, <X>, <Y>)` —— 用来将某个图标依据左侧图像中的坐标系统移动到指定的坐标位置 (<X>, <Y>)。你将**不会**收到更新后的图片作为视觉反馈。你的移动指令对另一位玩家不可见。\n\n不要添加任何额外内容，包括思考过程、额外格式或反引号等。\n\n**交流指引**\n1. 和另一位玩家就移动哪个图标达成一致。你不能仅仅通过 ID 指出要移动的图标，因为同一个 ID 可能在两位玩家的图片中对应不同的图标。正确做法是先描述图标的样子，双方确认后，再使用该图标的 ID 发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例：图标 D 可能对你和另一位玩家而言是不同的图标\nsay(我们来移动图标 D 吧!)\n\n# 正确示例：用描述的方式来锁定图标\nsay(我们来移动那个 <图标描述> 图标吧！)\n\n# 如果对方同意，再共同确认目标位置\n```\n\n2. 就目标位置达成共识。你**不能**直接通过坐标来告诉对方目标位置。正确做法是根据背景图描述目标位置，双方确认后，再使用具体坐标发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例\nsay(我们把 <图标描述> 图标移动到坐标 (800, 100) 吧！)\n\n# 正确示例：用背景图中的物体来描述目标位置\nsay(我们把 <图标描述> 图标移动到 <目标位置描述> 吧!)\n\n# 如果对方同意，\n# 且你的图中符合 <图标描述> 的图标 ID 为 <ID>\n# 且目标位置 <目标位置描述> 的坐标为 (<X>, <Y>)\n# 那你就可以发送移动指令\n移动(<ID>, <X>, <Y>)\n```\n\n**游戏结束**\n游戏结束命令有两种格式：\n- 使用 `发送(结束了?)` 表示你认为所有相同图标已经对齐；\n- 如果对方也同意，他们将回复 `发送(结束了!)`，游戏随之结束。\n在发送或回复结束命令前，请确保所有图标的位置已对齐。\n\n**胜负判定**\n如果游戏在 8 个回合内结束，则两位玩家均获胜。一个回合的定义为两位玩家各自发送一条有效命令。\n\n如果你出现以下情况，你将立即输掉游戏：\n\n- 发送任何分析、推理内容，或使用 `发送(<消息>)` 和 `移动(<ID>, <X>, <Y>)` 以外的格式；\n- 使用目标位置的坐标指示另一位玩家移动图标。\n另一位玩家开始了游戏并发送了以下消息：\n\n\"$start_message\"\n\n你的第一条指令是什么？",
          "new_turn": "\n另一位玩家发送了以下消息：\n\n\"$turn_message\"\n\n你的下一条指令是什么？",
          "new_turn_move": "另一位玩家在TA自己的网格上移动了一个图标。\n\n你的下一条指令是什么？",
          "invalid_response": "犯规：$reason\n\n请确保：\n\n* 发给另一位玩家的消息中 **不得包含** “$row”“$column” 这样的词，**也不得包含任何数字或坐标**！\n* 你的回应只能是 `$say` 或 `$move` 其中之一，**不得有其他任何内容**！不要使用任何格式、注释或推理过程！\n",
          "penalty_message": "\n你和另一位玩家累计已犯规 $penalty 次，最多允许 $max_penalties 次犯规。请重试！",
          "penalty_counter": "\n你和另一位玩家累计已犯规 $penalty 次，最多允许 $max_penalties 次犯规。",
          "message_relay": "你的消息已转发给另一位玩家。",
          "move_pattern": "(?P<head>.*)移动\\((?P<obj>[A-Z]), *(?P<x>\\d+), *(?P<y>\\d+)\\)(?P<tail>.*)",
          "message_pattern": "(?P<head>.*)发送\\((?P<message>[^)]+)\\)(?P<tail>.*)",
          "terminate_question": "结束了？",
          "terminate_answer": "结束了！",
          "restricted": ["[0-9]+"],
          "parse_errors": {
            "head_tail": "你的指令首尾不能有任何多余的内容！",
            "several_commands": "你的消息中有多个指令！",
            "restriction": "你的消息中有受限内容！",
            "invalid_format": "你的消息格式不符合要求！",
            "invalid_start": "你必须先向另一位玩家发送一条消息来开始游戏！"
          },
          "move_messages": {
            "successful": "已成功将图标 '$object' 移动到 ($x,$y)。\n\n",
            "out_of_bounds": "无效移动：($x,$y) 超出边界。请重试！\n\n",
            "obj_not_found": "无效移动：你的图片中没有 ID 为 '$object' 的图标。请重试！\n\n"
          },
          "background": "resources/backgrounds/kitchen.png",
          "state1": [
            {
              "id": "A",
              "coord": [500, 500],
              "name": "Bathtub",
              "url": "https://cdn-icons-png.freepik.com/128/6971/6971022.png",
              "freepik_id": 6971022
            },
            {
              "id": "B",
              "coord": [200, 300],
              "name": "Washing machine",
              "url": "https://cdn-icons-png.freepik.com/128/752/752071.png",
              "freepik_id": 752071
            }
          ],
          "state2": [
            {
              "id": "A",
              "coord": [200, 500],
              "name": "Bathtub",
              "url": "https://cdn-icons-png.freepik.com/128/6971/6971022.png",
              "freepik_id": 6971022
            },
            {
              "id": "B",
              "coord": [600, 500],
              "name": "Washing machine",
              "url": "https://cdn-icons-png.freepik.com/128/752/752071.png",
              "freepik_id": 752071
            }
          ]
        }
      ]
    },
    {
      "name": "similar_2_zh-CN",
      "game_instances": [
        {
          "game_id": 0,
          "max_rounds": 8,
          "max_penalties": 4,
          "lenient": true,
          "p1_initial_prompt": "附件中的图片由两部分组成：\n\n- 右侧是图例，展示了若干图标，每个图标上方标有一个对应的 ID。\n\n- 左侧是一张带有 X-Y 坐标系的背景图，图例中的图标被随机叠加在其上，坐标轴分别在图片的左侧和下方。请注意，Y 轴上数值是向下递增的。\n\n你将与另一位玩家基于这张图片进行一场协作游戏。另一位玩家看到的是该图片的一个变体，其中图标的位置与你的不同。游戏目标是：两位玩家分别移动自己图像中的图标，使得相同的图标最终出现在相同的坐标位置上。\n\n**沟通格式**\n请严格按照以下两种命令格式进行沟通，每回合仅发送一条指令：\n\n1. `发送(<消息>)` —— 用来向另一位玩家发送信息。\n\n2. `移动(<ID>, <X>, <Y>)` —— 用来将某个图标依据左侧图像中的坐标系统移动到指定的坐标位置 (<X>, <Y>)。你将**不会**收到更新后的图片作为视觉反馈。你的移动指令对另一位玩家不可见。\n\n不要添加任何额外内容，包括思考过程、额外格式或反引号等。\n\n**交流指引**\n1. 和另一位玩家就移动哪个图标达成一致。你不能仅仅通过 ID 指出要移动的图标，因为同一个 ID 可能在两位玩家的图片中对应不同的图标。正确做法是先描述图标的样子，双方确认后，再使用该图标的 ID 发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例：图标 D 可能对你和另一位玩家而言是不同的图标\nsay(我们来移动图标 D 吧!)\n\n# 正确示例：用描述的方式来锁定图标\nsay(我们来移动那个 <图标描述> 图标吧！)\n\n# 如果对方同意，再共同确认目标位置\n```\n\n2. 就目标位置达成共识。你**不能**直接通过坐标来告诉对方目标位置。正确做法是根据背景图描述目标位置，双方确认后，再使用具体坐标发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例\nsay(我们把 <图标描述> 图标移动到坐标 (800, 100) 吧！)\n\n# 正确示例：用背景图中的物体来描述目标位置\nsay(我们把 <图标描述> 图标移动到 <目标位置描述> 吧!)\n\n# 如果对方同意，\n# 且你的图中符合 <图标描述> 的图标 ID 为 <ID>\n# 且目标位置 <目标位置描述> 的坐标为 (<X>, <Y>)\n# 那你就可以发送移动指令\n移动(<ID>, <X>, <Y>)\n```\n\n**游戏结束**\n游戏结束命令有两种格式：\n- 使用 `发送(结束了?)` 表示你认为所有相同图标已经对齐；\n- 如果对方也同意，他们将回复 `发送(结束了!)`，游戏随之结束。\n在发送或回复结束命令前，请确保所有图标的位置已对齐。\n\n**胜负判定**\n如果游戏在 8 个回合内结束，则两位玩家均获胜。一个回合的定义为两位玩家各自发送一条有效命令。\n\n如果你出现以下情况，你将立即输掉游戏：\n\n- 发送任何分析、推理内容，或使用 `发送(<消息>)` 和 `移动(<ID>, <X>, <Y>)` 以外的格式；\n- 使用目标位置的坐标指示另一位玩家移动图标。\n请向另一位玩家发送一条消息以开始游戏！",
          "p2_initial_prompt": "附件中的图片由两部分组成：\n\n- 右侧是图例，展示了若干图标，每个图标上方标有一个对应的 ID。\n\n- 左侧是一张带有 X-Y 坐标系的背景图，图例中的图标被随机叠加在其上，坐标轴分别在图片的左侧和下方。请注意，Y 轴上数值是向下递增的。\n\n你将与另一位玩家基于这张图片进行一场协作游戏。另一位玩家看到的是该图片的一个变体，其中图标的位置与你的不同。游戏目标是：两位玩家分别移动自己图像中的图标，使得相同的图标最终出现在相同的坐标位置上。\n\n**沟通格式**\n请严格按照以下两种命令格式进行沟通，每回合仅发送一条指令：\n\n1. `发送(<消息>)` —— 用来向另一位玩家发送信息。\n\n2. `移动(<ID>, <X>, <Y>)` —— 用来将某个图标依据左侧图像中的坐标系统移动到指定的坐标位置 (<X>, <Y>)。你将**不会**收到更新后的图片作为视觉反馈。你的移动指令对另一位玩家不可见。\n\n不要添加任何额外内容，包括思考过程、额外格式或反引号等。\n\n**交流指引**\n1. 和另一位玩家就移动哪个图标达成一致。你不能仅仅通过 ID 指出要移动的图标，因为同一个 ID 可能在两位玩家的图片中对应不同的图标。正确做法是先描述图标的样子，双方确认后，再使用该图标的 ID 发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例：图标 D 可能对你和另一位玩家而言是不同的图标\nsay(我们来移动图标 D 吧!)\n\n# 正确示例：用描述的方式来锁定图标\nsay(我们来移动那个 <图标描述> 图标吧！)\n\n# 如果对方同意，再共同确认目标位置\n```\n\n2. 就目标位置达成共识。你**不能**直接通过坐标来告诉对方目标位置。正确做法是根据背景图描述目标位置，双方确认后，再使用具体坐标发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例\nsay(我们把 <图标描述> 图标移动到坐标 (800, 100) 吧！)\n\n# 正确示例：用背景图中的物体来描述目标位置\nsay(我们把 <图标描述> 图标移动到 <目标位置描述> 吧!)\n\n# 如果对方同意，\n# 且你的图中符合 <图标描述> 的图标 ID 为 <ID>\n# 且目标位置 <目标位置描述> 的坐标为 (<X>, <Y>)\n# 那你就可以发送移动指令\n移动(<ID>, <X>, <Y>)\n```\n\n**游戏结束**\n游戏结束命令有两种格式：\n- 使用 `发送(结束了?)` 表示你认为所有相同图标已经对齐；\n- 如果对方也同意，他们将回复 `发送(结束了!)`，游戏随之结束。\n在发送或回复结束命令前，请确保所有图标的位置已对齐。\n\n**胜负判定**\n如果游戏在 8 个回合内结束，则两位玩家均获胜。一个回合的定义为两位玩家各自发送一条有效命令。\n\n如果你出现以下情况，你将立即输掉游戏：\n\n- 发送任何分析、推理内容，或使用 `发送(<消息>)` 和 `移动(<ID>, <X>, <Y>)` 以外的格式；\n- 使用目标位置的坐标指示另一位玩家移动图标。\n另一位玩家开始了游戏并发送了以下消息：\n\n\"$start_message\"\n\n你的第一条指令是什么？",
          "new_turn": "\n另一位玩家发送了以下消息：\n\n\"$turn_message\"\n\n你的下一条指令是什么？",
          "new_turn_move": "另一位玩家在TA自己的网格上移动了一个图标。\n\n你的下一条指令是什么？",
          "invalid_response": "犯规：$reason\n\n请确保：\n\n* 发给另一位玩家的消息中 **不得包含** “$row”“$column” 这样的词，**也不得包含任何数字或坐标**！\n* 你的回应只能是 `$say` 或 `$move` 其中之一，**不得有其他任何内容**！不要使用任何格式、注释或推理过程！\n",
          "penalty_message": "\n你和另一位玩家累计已犯规 $penalty 次，最多允许 $max_penalties 次犯规。请重试！",
          "penalty_counter": "\n你和另一位玩家累计已犯规 $penalty 次，最多允许 $max_penalties 次犯规。",
          "message_relay": "你的消息已转发给另一位玩家。",
          "move_pattern": "(?P<head>.*)移动\\((?P<obj>[A-Z]), *(?P<x>\\d+), *(?P<y>\\d+)\\)(?P<tail>.*)",
          "message_pattern": "(?P<head>.*)发送\\((?P<message>[^)]+)\\)(?P<tail>.*)",
          "terminate_question": "结束了？",
          "terminate_answer": "结束了！",
          "restricted": ["[0-9]+"],
          "parse_errors": {
            "head_tail": "你的指令首尾不能有任何多余的内容！",
            "several_commands": "你的消息中有多个指令！",
            "restriction": "你的消息中有受限内容！",
            "invalid_format": "你的消息格式不符合要求！",
            "invalid_start": "你必须先向另一位玩家发送一条消息来开始游戏！"
          },
          "move_messages": {
            "successful": "已成功将图标 '$object' 移动到 ($x,$y)。\n\n",
            "out_of_bounds": "无效移动：($x,$y) 超出边界。请重试！\n\n",
            "obj_not_found": "无效移动：你的图片中没有 ID 为 '$object' 的图标。请重试！\n\n"
          },
          "background": "resources/backgrounds/kitchen.png",
          "state1": [
            {
              "id": "A",
              "coord": [200, 100],
              "name": "Television",
              "url": "https://cdn-icons-png.freepik.com/128/7989/7989526.png",
              "freepik_id": 7989526
            },
            {
              "id": "B",
              "coord": [600, 300],
              "name": "Tv",
              "url": "https://cdn-icons-png.freepik.com/128/18669/18669072.png",
              "freepik_id": 18669072
            }
          ],
          "state2": [
            {
              "id": "A",
              "coord": [100, 500],
              "name": "Television",
              "url": "https://cdn-icons-png.freepik.com/128/7989/7989526.png",
              "freepik_id": 7989526
            },
            {
              "id": "B",
              "coord": [500, 200],
              "name": "Tv",
              "url": "https://cdn-icons-png.freepik.com/128/18669/18669072.png",
              "freepik_id": 18669072
            }
          ]
        }
      ]
    },
    {
      "name": "abstract_2_zh-CN",
      "game_instances": [
        {
          "game_id": 0,
          "max_rounds": 8,
          "max_penalties": 4,
          "lenient": true,
          "p1_initial_prompt": "附件中的图片由两部分组成：\n\n- 右侧是图例，展示了若干图标，每个图标上方标有一个对应的 ID。\n\n- 左侧是一张带有 X-Y 坐标系的背景图，图例中的图标被随机叠加在其上，坐标轴分别在图片的左侧和下方。请注意，Y 轴上数值是向下递增的。\n\n你将与另一位玩家基于这张图片进行一场协作游戏。另一位玩家看到的是该图片的一个变体，其中图标的位置与你的不同。游戏目标是：两位玩家分别移动自己图像中的图标，使得相同的图标最终出现在相同的坐标位置上。\n\n**沟通格式**\n请严格按照以下两种命令格式进行沟通，每回合仅发送一条指令：\n\n1. `发送(<消息>)` —— 用来向另一位玩家发送信息。\n\n2. `移动(<ID>, <X>, <Y>)` —— 用来将某个图标依据左侧图像中的坐标系统移动到指定的坐标位置 (<X>, <Y>)。你将**不会**收到更新后的图片作为视觉反馈。你的移动指令对另一位玩家不可见。\n\n不要添加任何额外内容，包括思考过程、额外格式或反引号等。\n\n**交流指引**\n1. 和另一位玩家就移动哪个图标达成一致。你不能仅仅通过 ID 指出要移动的图标，因为同一个 ID 可能在两位玩家的图片中对应不同的图标。正确做法是先描述图标的样子，双方确认后，再使用该图标的 ID 发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例：图标 D 可能对你和另一位玩家而言是不同的图标\nsay(我们来移动图标 D 吧!)\n\n# 正确示例：用描述的方式来锁定图标\nsay(我们来移动那个 <图标描述> 图标吧！)\n\n# 如果对方同意，再共同确认目标位置\n```\n\n2. 就目标位置达成共识。你**不能**直接通过坐标来告诉对方目标位置。正确做法是根据背景图描述目标位置，双方确认后，再使用具体坐标发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例\nsay(我们把 <图标描述> 图标移动到坐标 (800, 100) 吧！)\n\n# 正确示例：用背景图中的物体来描述目标位置\nsay(我们把 <图标描述> 图标移动到 <目标位置描述> 吧!)\n\n# 如果对方同意，\n# 且你的图中符合 <图标描述> 的图标 ID 为 <ID>\n# 且目标位置 <目标位置描述> 的坐标为 (<X>, <Y>)\n# 那你就可以发送移动指令\n移动(<ID>, <X>, <Y>)\n```\n\n**游戏结束**\n游戏结束命令有两种格式：\n- 使用 `发送(结束了?)` 表示你认为所有相同图标已经对齐；\n- 如果对方也同意，他们将回复 `发送(结束了!)`，游戏随之结束。\n在发送或回复结束命令前，请确保所有图标的位置已对齐。\n\n**胜负判定**\n如果游戏在 8 个回合内结束，则两位玩家均获胜。一个回合的定义为两位玩家各自发送一条有效命令。\n\n如果你出现以下情况，你将立即输掉游戏：\n\n- 发送任何分析、推理内容，或使用 `发送(<消息>)` 和 `移动(<ID>, <X>, <Y>)` 以外的格式；\n- 使用目标位置的坐标指示另一位玩家移动图标。\n请向另一位玩家发送一条消息以开始游戏！",
          "p2_initial_prompt": "附件中的图片由两部分组成：\n\n- 右侧是图例，展示了若干图标，每个图标上方标有一个对应的 ID。\n\n- 左侧是一张带有 X-Y 坐标系的背景图，图例中的图标被随机叠加在其上，坐标轴分别在图片的左侧和下方。请注意，Y 轴上数值是向下递增的。\n\n你将与另一位玩家基于这张图片进行一场协作游戏。另一位玩家看到的是该图片的一个变体，其中图标的位置与你的不同。游戏目标是：两位玩家分别移动自己图像中的图标，使得相同的图标最终出现在相同的坐标位置上。\n\n**沟通格式**\n请严格按照以下两种命令格式进行沟通，每回合仅发送一条指令：\n\n1. `发送(<消息>)` —— 用来向另一位玩家发送信息。\n\n2. `移动(<ID>, <X>, <Y>)` —— 用来将某个图标依据左侧图像中的坐标系统移动到指定的坐标位置 (<X>, <Y>)。你将**不会**收到更新后的图片作为视觉反馈。你的移动指令对另一位玩家不可见。\n\n不要添加任何额外内容，包括思考过程、额外格式或反引号等。\n\n**交流指引**\n1. 和另一位玩家就移动哪个图标达成一致。你不能仅仅通过 ID 指出要移动的图标，因为同一个 ID 可能在两位玩家的图片中对应不同的图标。正确做法是先描述图标的样子，双方确认后，再使用该图标的 ID 发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例：图标 D 可能对你和另一位玩家而言是不同的图标\nsay(我们来移动图标 D 吧!)\n\n# 正确示例：用描述的方式来锁定图标\nsay(我们来移动那个 <图标描述> 图标吧！)\n\n# 如果对方同意，再共同确认目标位置\n```\n\n2. 就目标位置达成共识。你**不能**直接通过坐标来告诉对方目标位置。正确做法是根据背景图描述目标位置，双方确认后，再使用具体坐标发出 `移动(<ID>, <X>, <Y>)` 指令。\n\n```\n# 错误示例\nsay(我们把 <图标描述> 图标移动到坐标 (800, 100) 吧！)\n\n# 正确示例：用背景图中的物体来描述目标位置\nsay(我们把 <图标描述> 图标移动到 <目标位置描述> 吧!)\n\n# 如果对方同意，\n# 且你的图中符合 <图标描述> 的图标 ID 为 <ID>\n# 且目标位置 <目标位置描述> 的坐标为 (<X>, <Y>)\n# 那你就可以发送移动指令\n移动(<ID>, <X>, <Y>)\n```\n\n**游戏结束**\n游戏结束命令有两种格式：\n- 使用 `发送(结束了?)` 表示你认为所有相同图标已经对齐；\n- 如果对方也同意，他们将回复 `发送(结束了!)`，游戏随之结束。\n在发送或回复结束命令前，请确保所有图标的位置已对齐。\n\n**胜负判定**\n如果游戏在 8 个回合内结束，则两位玩家均获胜。一个回合的定义为两位玩家各自发送一条有效命令。\n\n如果你出现以下情况，你将立即输掉游戏：\n\n- 发送任何分析、推理内容，或使用 `发送(<消息>)` 和 `移动(<ID>, <X>, <Y>)` 以外的格式；\n- 使用目标位置的坐标指示另一位玩家移动图标。\n另一位玩家开始了游戏并发送了以下消息：\n\n\"$start_message\"\n\n你的第一条指令是什么？",
          "new_turn": "\n另一位玩家发送了以下消息：\n\n\"$turn_message\"\n\n你的下一条指令是什么？",
          "new_turn_move": "另一位玩家在TA自己的网格上移动了一个图标。\n\n你的下一条指令是什么？",
          "invalid_response": "犯规：$reason\n\n请确保：\n\n* 发给另一位玩家的消息中 **不得包含** “$row”“$column” 这样的词，**也不得包含任何数字或坐标**！\n* 你的回应只能是 `$say` 或 `$move` 其中之一，**不得有其他任何内容**！不要使用任何格式、注释或推理过程！\n",
          "penalty_message": "\n你和另一位玩家累计已犯规 $penalty 次，最多允许 $max_penalties 次犯规。请重试！",
          "penalty_counter": "\n你和另一位玩家累计已犯规 $penalty 次，最多允许 $max_penalties 次犯规。",
          "message_relay": "你的消息已转发给另一位玩家。",
          "move_pattern": "(?P<head>.*)移动\\((?P<obj>[A-Z]), *(?P<x>\\d+), *(?P<y>\\d+)\\)(?P<tail>.*)",
          "message_pattern": "(?P<head>.*)发送\\((?P<message>[^)]+)\\)(?P<tail>.*)",
          "terminate_question": "结束了？",
          "terminate_answer": "结束了！",
          "restricted": ["[0-9]+"],
          "parse_errors": {
            "head_tail": "你的指令首尾不能有任何多余的内容！",
            "several_commands": "你的消息中有多个指令！",
            "restriction": "你的消息中有受限内容！",
            "invalid_format": "你的消息格式不符合要求！",
            "invalid_start": "你必须先向另一位玩家发送一条消息来开始游戏！"
          },
          "move_messages": {
            "successful": "已成功将图标 '$object' 移动到 ($x,$y)。\n\n",
            "out_of_bounds": "无效移动：($x,$y) 超出边界。请重试！\n\n",
            "obj_not_found": "无效移动：你的图片中没有 ID 为 '$object' 的图标。请重试！\n\n"
          },
          "background": "resources/backgrounds/kitchen.png",
          "state1": [
            {
              "id": "A",
              "coord": [400, 200],
              "name": "Atoms",
              "url": "https://cdn-icons-png.freepik.com/128/4903/4903376.png",
              "freepik_id": 4903376
            },
            {
              "id": "B",
              "coord": [200, 100],
              "name": "Pattern",
              "url": "https://cdn-icons-png.freepik.com/128/11932/11932415.png",
              "freepik_id": 11932415
            }
          ],
          "state2": [
            {
              "id": "A",
              "coord": [800, 400],
              "name": "Atoms",
              "url": "https://cdn-icons-png.freepik.com/128/4903/4903376.png",
              "freepik_id": 4903376
            },
            {
              "id": "B",
              "coord": [800, 300],
              "name": "Pattern",
              "url": "https://cdn-icons-png.freepik.com/128/11932/11932415.png",
              "freepik_id": 11932415
            }
          ]
        }
      ]
    }
  ]
}
